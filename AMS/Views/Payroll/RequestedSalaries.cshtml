@model AMS.Models.Payroll
@{
    ViewBag.Title = "Requested Salaries";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
</head>
<body>

    <div class="main-content">
        <div class="breadcrumb">
            <ul>
                <li><a href="/Card/Index">Card</a></li>
            </ul>
        </div>
        <div class="separator-breadcrumb border-top"></div>
    </div>

    <div class="col-md-12 mb-3">


        <div class="card text-start">

            <div class="card-header">
                <h4 class="text-25 text-muted">Payroll</h4>
            </div>
            <div class="alert alert-dismissible fade show alert-card alert-success" role="alert" id="successAlert" style="display:none">
                <strong class="text-capitalize">Success!</strong> <span id="successMessage"></span>
                <button class="btn btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            <div class="alert alert-dismissible fade show alert-card alert-danger" role="alert" id="errorAlert" style="display:none">
                <strong class="text-capitalize">Error!</strong> <span id="errorMessage"></span>
                <button class="btn btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover table-bordered table-striped" id="payrollTable">
                        <thead class="bg-gray-300">
                            <tr>
                                <th scope="col">Employee Name</th>
                                <th scope="col">Year</th>
                                <th scope="col">Month</th>
                                <th scope="col">Hour Worked</th>
                                <th scope="col">Requested Salary</th>
                                <th scope="col">Cumulative Salary</th>
                                <th scope="col">Send For Approval</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="card-footer">

            </div>
        </div>
    </div>
    <div class="modal fade" id="approveSalary" tabindex="-1" role="dialog" aria-labelledby="verifyModalContent" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="verifyModalContent_title">Approve Salary</h5>
                    <button class="btn btn-close" type="button" data-bs-dismiss="modal" id="modal-close" aria-label="Close"></button>
                </div>
                @using (Ajax.BeginForm("ApproveSalary", "Payroll", new AjaxOptions
                {
                    HttpMethod = "POST",
                    OnSuccess = "handleSuccessforAdd",
                    OnFailure = "handleFailureforAdd",
                }, new { id = "approveSalary" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="modal-body">

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Bonus, new { @class = "col-form-label" })
                                    @Html.TextBoxFor(model => model.Bonus, new { @class = "form-control", @id = "bonus", @type = "number", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger",@id="errorBonus" })
                                    @Html.HiddenFor(model => model.Id, new { @id = "payrollId" })
                                    @Html.HiddenFor(model => model.requestedSalary, new { @id = "requestedSalary" })
                                    <div id="duplicateNameforAdd" class="text-danger"></div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" type="button" id="cancel" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" id="submitForm">Approve</button>
                    </div>
                }

            </div>
        </div>
    </div>

</body>
</html>
@section scripts
{
    <script>
        var payrollTable;
        $(document).ready(function () {
            var monthNames = [
                "January", "February", "March", "April", "May", "June", "July",
                "August", "September", "October", "November", "December"
            ];
            payrollTable = $('#payrollTable').DataTable({
                destroy: true,
                ajax: {
                    url: '/Payroll/GetPayrollData', // Replace with your backend route
                    dataSrc: '',
                },
                columns: [
                    {
                        "data": "ApplicationUser",
                        "render": function (data, type, row) {
                            return data.FirstName + " " + data.LastName;
                        }
                    },
                    { data: 'Year' },
                    {
                        "data": "Month",
                        "render": function (data) {
                            // Convert numeric month to month name
                            return monthNames[data - 1]; // Subtract 1 because JavaScript months are zero-indexed
                        }
                    },
                    {
                        "data": "TotalHoursWorked",
                        "render": function (data) {
                            // Format TotalHoursWorked to two decimal places
                            return parseFloat(data).toFixed(2);
                        }
                    },
                    {
                        "data": "requestedSalary",
                        "render": function (data) {
                            // Format TotalSalary to two decimal places
                            return parseFloat(data).toFixed(2);
                        }
                    },
                    {
                        "data": "TotalSalary",
                        "render": function (data) {
                            // Format TotalSalary to two decimal places
                            return parseFloat(data).toFixed(2);
                        }
                    },
                    {
                        "data": "isApproved",
                        "render": function (data, type, row) {
                            if (data === false) {
                                return "<a class='text-success me-2 btn btn-outline-primary m-1' href='#' data-bs-toggle='modal' data-target='#approveSalary' data-whatever='mdo' data-id='" + row.Id + "' data-reqSalary='" + row.requestedSalary +"' >Approve</a>"; // Add '+' here

                                // If isApproved is false, render a button with data-id attribute
                            } else {
                                // If isApproved is true, render a disabled button
                                return '<button type="button" class="btn btn-outline-primary" disabled>Approved</button>';
                            }
                        }
                    }

                ],
                pagingType: 'full_numbers',
                language: {
                    paginate: {
                        first: 'First',
                        previous: '&lsaquo;',
                        next: '&rsaquo;',
                        last: 'Last'
                    },
                    searchPlaceholder: 'Min 3 Characters'
                },
                autoWidth: false,
                columnDefs: [
                    { width: '100px', targets: '_all' }
                ],
                drawCallback: function () {
                    // Override DataTables styles with Bootstrap styles after each draw
                    $('.dataTables_paginate .paginate_button').removeClass('paginate_button').addClass('page-item');
                    $('.dataTables_paginate .paginate_button a').removeClass('paginate_button').addClass('page-link');
                    $('.dataTables_paginate .paginate_button.current').removeClass('paginate_button').addClass('active');
                    $('.dataTables_paginate .paginate_button.disabled').removeClass('paginate_button').addClass('disabled');
                }
            });

            $('#approveSalary').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var payrollId = button.data('id'); // Extract info from data-id attribute
                var requestedSalary = button.data('reqsalary'); // Extract info from data-reqSalary attribute
                $('#payrollId').val(payrollId); // Set the value of the hidden field for payrollId
                $('#requestedSalary').val(requestedSalary); // Set the value of the hidden field for requestedSalary
            });

            $('#approveSalary').on('hide.bs.modal', function (event) {

                $('#payrollId').val('');
                $('#bonus').val('');
                $('#requestedSalary').val('');
                $('#errorBonus').val('');
            });
        });
        function handleSuccessforAdd(response) {
            payrollTable.ajax.reload();
            $("#approveSalary").modal('hide');
            if (response.success) {
                $('#successMessage').text(response.message);
                $('#successAlert').show();
                setInterval(hideAlerts, 2000);
            } else {
                $('#errorMessage').text(response.message);
                $('#errorAlert').show();
                setInterval(hideAlerts, 2000);
            }
        }

        function handleFailureforAdd(xhr, status, error) {
            $("#approveSalary").modal('hide');
            $('#errorMessage').text("An error occurred while processing your request. Please try again later.");
            $('#errorAlert').show();
            setInterval(hideAlerts, 2000);
        }
    </script>
}